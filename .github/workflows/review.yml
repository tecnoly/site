name: Heroku Review App
on:
  pull_request:
    types: [labeled]

jobs:
  get-heroku-pipeline-id:
    runs-on: ubuntu-latest
    outputs:
      heroku-pipeline-id: ${{ steps.terraform-output.outputs.heroku-pipeline-id }}
    steps:
      - 
        name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '~> 1.2.6'
          terraform_wrapper: false
          cli_config_credentials_token: ${{ secrets.TFE_TOKEN }}
      - 
        id: terraform-output
        run: echo ::set-output name=heroku-pipeline-id::$(terraform output heroku_pipeline_id)
      
  create-review-app:
    needs: get-heroku-pipeline-id
    if: ${{ github.event.label.name == 'create-review-app' }}
    runs-on: ubuntu-latest
    steps:
      - 
        uses: fastruby/manage-heroku-review-app@v1.2
        with:
          action: create
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          HEROKU_PIPELINE_ID: ${{ needs.get-heroku-pipeline-id.outputs.heroku-pipeline-id }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - 
        uses: fastruby/pr-unlabeler@v1
        with:
          label-to-remove: "create-review-app"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  destroy-review-app:
    needs: get-heroku-pipeline-id
    if: ${{ github.event.label.name == 'destroy-review-app' }}
    runs-on: ubuntu-latest
    steps:
      - 
        uses: fastruby/manage-heroku-review-app@v1.2
        with:
          action: destroy
        env:
          HEROKU_API_TOKEN: ${{ secrets.HEROKU_API_TOKEN }}
          HEROKU_PIPELINE_ID: ${{ needs.get-heroku-pipeline-id.outputs.heroku-pipeline-id }}
      - 
        uses: fastruby/pr-unlabeler@v1
        with:
          label-to-remove: "destroy-review-app"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}